{"version":3,"sources":["../app.js"],"names":["require","config","express","path","favicon","logger","cookieParser","bodyParser","passport","flash","configDb","mongoose","app","session","connect","url","useMongoClient","connection","on","console","log","err","set","join","__dirname","locals","title","process","env","TITLE","use","json","urlencoded","extended","static","secret","SESSION_SECRET","resave","saveUninitialized","initialize","req","res","next","Error","status","message","error","get","render","module","exports"],"mappings":"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","file":"app.js","sourcesContent":["require('dotenv').config();\nconst express = require('express');\nconst path = require('path');\nconst favicon = require('serve-favicon');\nconst logger = require('morgan');\nconst cookieParser = require('cookie-parser');\nconst bodyParser = require('body-parser');\nconst passport = require('passport');\nconst  flash = require('connect-flash');\nconst configDb = require('./config/database');\nconst mongoose = require('mongoose');\nconst app = express();\nconst session = require('express-session');\nmongoose.connect(configDb.url,{useMongoClient:true});\n\nmongoose.connection.on('connected', function () {\n    console.log('Mongoose default connection connected')\n});\nmongoose.connection.on('error', function (err) {\n    console.log('Mongoose default connection error:'+err)\n});\nmongoose.connection.on('disconnected', function () {\n    console.log('Mongoose default connection disconnected')\n});\n\n// view engine setup\napp.set('views', path.join(__dirname, 'views'));\napp.set('view engine', 'ejs');\n\napp.locals.title = process.env.TITLE;\n\n// uncomment after placing your favicon in /public\n//app.use(favicon(path.join(__dirname, 'public', 'favicon.ico')));\n\nrequire('./config/passport')(passport);\napp.use(logger('dev'));\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: false }));\napp.use(cookieParser());\napp.use(express.static(path.join(__dirname, 'public')));\napp.use(session({secret:process.env.SESSION_SECRET, resave:true, saveUninitialized:true}));\napp.use(passport.initialize());\napp.use(passport.session());\napp.use(flash());\nrequire('./routes/routes')(app, passport);\n\n\n// catch 404 and forward to error handler\napp.use(function(req, res, next) {\n  let err = new Error('Not Found');\n  err.status = 404;\n  next(err);\n});\n\n// error handler\napp.use(function(err, req, res, next) {\n  // set locals, only providing error in development\n  res.locals.message = err.message;\n  res.locals.error = req.app.get('env') === 'development' ? err : {};\n\n  // render the error page\n  res.status(err.status || 500);\n  res.render('error');\n});\n\nmodule.exports = app;\n"]}